{"version":3,"file":"src_app_tab1_tab1_module_ts.js","mappings":"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","sources":["./src/app/api/weather.service.ts","./src/app/tab1/tab1-routing.module.ts","./src/app/tab1/tab1.module.ts","./src/app/tab1/tab1.page.ts","./src/app/tab1/tab1.page.html"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n\n  constructor(private http: HttpClient) { }\n\n  public getWeather(text: String) \n{\nif (text.length === 0)\n{\ntext = 'Zlín'\n}\nreturn this.http.get('https://api.weatherapi.com/v1/current.json?key=770217920e53414d85e193006222401&q='+text+'&aqi=no');\n}\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Tab1Page } from './tab1.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab1Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab1PageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { Tab1PageRoutingModule } from './tab1-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    Tab1PageRoutingModule\n  ],\n  declarations: [Tab1Page]\n})\nexport class Tab1PageModule {}\n","import { Component } from '@angular/core';\nimport {WeatherService} from '../api/weather.service';\nimport { Storage } from '@capacitor/storage';\n\n\n@Component({\n  selector: 'app-tab1',\n  templateUrl: 'tab1.page.html',\n  styleUrls: ['tab1.page.scss']\n})\nexport class Tab1Page {\n  myinput:String = ''\n  Teplota:String = ''\n  PocTeplota:String = ''\n  Lokacia:String = ''\n  Vietor:String  = ''\n  SmerVetra:String = ''\n  Oblacnost:String = ''\n  Cas:String = ''\n  Tlak:String = ''\n  Viditelnost:String = ''\n  KEY_HISTORY = \"search_history\"\n  \n\nconstructor(private weatherService: WeatherService) \n{\n  this.weatherService.getWeather(\"\").subscribe( (data) => \n  {\n  this.Teplota = data['current']['temp_c'];\n  this.PocTeplota = data['current']['feelslike_c'];\n  this.Vietor = data['current']['wind_kph'];\n  this.SmerVetra = data['current']['wind_dir'];\n  this.Oblacnost = data['current']['cloud'];\n  this.Tlak = data['current']['pressure_in'];\n  this.Viditelnost = data['current']['vis_km'];\n  this.Lokacia = data['location']['country'];\n  console.log(data)\n  });\n  }\n\n  \n  public async btnClicked()\n{\nthis.weatherService.getWeather(this.myinput).subscribe( (data) => \n{\nthis.Teplota = data['current']['temp_c'];\nthis.PocTeplota = data['current']['feelslike_c'];\nthis.Vietor = data['current']['wind_kph'];\nthis.SmerVetra = data['current']['wind_dir'];\nthis.Oblacnost = data['current']['cloud'];\nthis.Tlak = data['current']['pressure_in'];\nthis.Viditelnost = data['current']['vis_km'];\nthis.Lokacia = data['location']['country'];\nconsole.log(data)\n});\n\nvar entry = { \"input\": this.myinput};\nvar history = JSON.parse((await Storage.get({key: this.KEY_HISTORY})).value);\n\nif (history == null) {\n  history = [];\n}\nhistory.unshift(entry)\nawait Storage.set({\n  key: this.KEY_HISTORY,\n  value: JSON.stringify(history),\n});\n}\n} \n","export default \"<script type=\\\"module\\\" src=\\\"https://cdn.jsdelivr.net/npm/@ionic/core/dist/ionic/ionic.esm.js\\\"></script>\\n    <script nomodule src=\\\"https://cdn.jsdelivr.net/npm/@ionic/core/dist/ionic/ionic.js\\\"></script>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://cdn.jsdelivr.net/npm/@ionic/core/css/ionic.bundle.css\\\" />\\n    <style>\\n      :root {\\n        --ion-safe-area-top: 20px;\\n        --ion-safe-area-bottom: 22px;\\n      }\\n    </style>\\n\\n\\n\\n<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      Weather API \\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card class=\\\"welcome-card\\\">\\n  <ion-card-content>\\n\\n  <ion-input [(ngModel)]=\\\"myinput\\\" placeholder=\\\"Zlín\\\"></ion-input>\\n\\n  </ion-card-content>\\n  <ion-button (click)=\\\"btnClicked()\\\" expand=\\\"block\\\">Zobraziť počasie</ion-button>\\n  </ion-card>\\n\\n      <ion-item>\\n        <ion-label>Teplota: </ion-label>\\n        <ion-note slot=\\\"end\\\" color=\\\"primary\\\">{{ Teplota }} °C</ion-note>\\n      </ion-item>\\n      \\n      <ion-item>\\n        <ion-label>Pocitová teplota: </ion-label>\\n        <ion-note slot=\\\"end\\\" color=\\\"primary\\\">{{ PocTeplota }} °C</ion-note>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Sila vetru: </ion-label>\\n        <ion-note slot=\\\"end\\\" color=\\\"success\\\">{{ Vietor }} km/h </ion-note>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Smer vetru: </ion-label>\\n        <ion-note slot=\\\"end\\\" color=\\\"success\\\">{{ SmerVetra }} </ion-note>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Oblačnosť: </ion-label>\\n        <ion-note slot=\\\"end\\\" color=\\\"danger\\\">{{ Oblacnost }} %</ion-note>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Tlak: </ion-label>\\n        <ion-note slot=\\\"end\\\" color=\\\"danger\\\">{{ Tlak }} pa</ion-note>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Viditelnosť: </ion-label>\\n        <ion-note slot=\\\"end\\\" color=\\\"danger\\\">{{ Viditelnost }} km</ion-note>\\n      </ion-item>\\n\\n      \\n\\n  </ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}